plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'

    // kapt
    id 'kotlin-kapt'

    // hilt
    id 'com.google.dagger.hilt.android'
}

android {
    namespace 'com.example.di'
    compileSdk project.compileSdkVersion

    defaultConfig {
        minSdk project.minSdkVersion
        targetSdk project.targetSdkVersion

        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        debug {
            buildConfigField "String", "NEWS_API_BASE_URL", "\"$BASE_URL\""
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField "String", "NEWS_API_BASE_URL", "\"$BASE_URL\""
        }
    }
    buildFeatures {
        buildConfig = true
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
}

dependencies {

    implementation(project(':common'))
    implementation(project(":data"))

    // dagger-hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt("com.google.dagger:hilt-compiler:$hilt_version")
    implementation("androidx.hilt:hilt-navigation-compose:1.1.0")

    // Room
    implementation "androidx.room:room-runtime:$room_version"
    annotationProcessor "androidx.room:room-compiler:$room_version"
    kapt("androidx.room:room-compiler:$room_version")
    implementation "androidx.room:room-ktx:$room_version"

    // Gson
    implementation 'com.google.code.gson:gson:2.9.1'

    // Retrofit
    implementation("com.squareup.retrofit2:retrofit:$retrofit_version")
    implementation("com.squareup.retrofit2:converter-gson:$retrofit_version")

    // OkHttp
    implementation("com.squareup.okhttp3:okhttp:$ok_http_version")
    implementation("com.squareup.okhttp3:logging-interceptor:$ok_http_version")

}